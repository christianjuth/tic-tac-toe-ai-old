const fs = require('fs');

const data = JSON.parse(fs.readFileSync("data-1637275939264.json"))

const trainingData = Object.entries(data).map(([game, val]) => ({
  input: game.split(',').map(c => +c), 
  output: [val]
}))

console.log(trainingData.length)

// function anonymous(input
//   ) {
//   return [1/(1+1/Math.exp((-1.3788440227508545-6.205700397491455*1/(1+1/Math.exp((-2.4426803588867188-0.08672159910202026*(input[0]||0)+0.4077984094619751*(input[1]||0)+0.08881183713674545*(input[2]||0)+0.5910845398902893*(input[3]||0)-0.013499145396053791*(input[4]||0)-8.556961059570312*(input[5]||0)-0.021587226539850235*(input[6]||0)+0.42801451683044434*(input[7]||0)+0.19146019220352173*(input[8]||0))))-3.6553616523742676*1/(1+1/Math.exp((-4.544086456298828+0.5108581185340881*(input[0]||0)+1.1626728773117065*(input[1]||0)+0.36292460560798645*(input[2]||0)+0.917015552520752*(input[3]||0)+0.175608828663826*(input[4]||0)+2.9136838912963867*(input[5]||0)+0.8092038631439209*(input[6]||0)-2.1043472290039062*(input[7]||0)+0.6665107607841492*(input[8]||0))))-11.319193840026855*1/(1+1/Math.exp((-12.152745246887207+0.5501238703727722*(input[0]||0)+0.1351880133152008*(input[1]||0)+0.48841798305511475*(input[2]||0)+1.1030704975128174*(input[3]||0)-0.779445230960846*(input[4]||0)+2.381122589111328*(input[5]||0)+0.3723859488964081*(input[6]||0)+8.567926406860352*(input[7]||0)-0.18546628952026367*(input[8]||0)))))))];
// };

function anonymous(input
  ) {
  return [1/(1+1/Math.exp((2.5682132244110107-3.814427137374878*1/(1+1/Math.exp((-6.840584754943848-0.054288748651742935*(input[0]||0)-0.39662298560142517*(input[1]||0)+0.1266552209854126*(input[2]||0)+12.755717277526855*(input[3]||0)-7.183719158172607*(input[4]||0)-0.7096982002258301*(input[5]||0)+0.16281408071517944*(input[6]||0)-0.43865278363227844*(input[7]||0)+0.21295323967933655*(input[8]||0))))-4.493760108947754*1/(1+1/Math.exp((2.1789045333862305-0.8320730924606323*(input[0]||0)-0.6850842833518982*(input[1]||0)-0.6651103496551514*(input[2]||0)-2.939162254333496*(input[3]||0)+17.33513832092285*(input[4]||0)+0.24867497384548187*(input[5]||0)-0.9116325974464417*(input[6]||0)-0.7997336387634277*(input[7]||0)-0.6790162324905396*(input[8]||0))))-5.6998209953308105*1/(1+1/Math.exp((-2.242125988006592+0.725405752658844*(input[0]||0)+1.2151345014572144*(input[1]||0)+0.5238355994224548*(input[2]||0)-0.3813174068927765*(input[3]||0)-2.41459584236145*(input[4]||0)+0.8103365302085876*(input[5]||0)+0.6131018400192261*(input[6]||0)+1.2524598836898804*(input[7]||0)+0.47216659784317017*(input[8]||0)))))))];
  };

const tests = []

trainingData.forEach(({input,output}) => {
  tests.push(Math.abs(output[0] - anonymous(input))); 
})

const average = (array) => array.reduce((a, b) => a + b) / array.length;

console.log('avg error', average(tests))